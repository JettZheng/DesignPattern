单一责任 开闭 里氏替换 接口隔离 依赖反转
1.策略模式（O）
    许多相似的类只有行为差异。可以提供一个策略来配置类的行为，避免过多与该类相关的if else。
2.装饰器模式 (S O I)
    装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式可以动态扩展一个实现类的功能。
    例：中间件
3.建造者模式（S I）
    建造者独立，易扩展。 2、便于控制细节属性
    例：创建可配置对象，组合经常变化的对象
4.对象池模式
    例：创建对象消耗比较高，追求高性能或者对减少内存分配的情况
5.单例模式
    例：创建全局唯一资源